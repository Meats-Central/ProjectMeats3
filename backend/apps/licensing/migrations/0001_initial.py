# Generated by Django 4.2.7 on 2025-09-11 02:44

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0002_tenantconfig"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("basic", "Basic"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        help_text="Plan tier level",
                        max_length=20,
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Price ID for this plan",
                        max_length=100,
                    ),
                ),
                (
                    "monthly_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Monthly price in USD",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "yearly_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Yearly price in USD (optional)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "max_users",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of users (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "max_suppliers",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of suppliers (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "max_customers",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of customers (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "max_orders_per_month",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum orders per month (null = unlimited)",
                        null=True,
                    ),
                ),
                ("has_ai_assistant", models.BooleanField(default=True)),
                ("has_advanced_reporting", models.BooleanField(default=True)),
                ("has_document_processing", models.BooleanField(default=True)),
                ("has_api_access", models.BooleanField(default=False)),
                ("has_priority_support", models.BooleanField(default=False)),
                ("has_custom_branding", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                (
                    "features",
                    models.JSONField(
                        default=list,
                        help_text="List of feature descriptions for marketing",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Subscription Plan",
                "verbose_name_plural": "Subscription Plans",
                "db_table": "subscription_plans",
                "ordering": ["monthly_price"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        blank=True, help_text="Stripe subscription ID", max_length=100
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(
                        blank=True, help_text="Stripe customer ID", max_length=100
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("incomplete", "Incomplete"),
                            ("incomplete_expired", "Incomplete Expired"),
                            ("trialing", "Trialing"),
                            ("unpaid", "Unpaid"),
                        ],
                        default="trialing",
                        help_text="Current subscription status",
                        max_length=20,
                    ),
                ),
                (
                    "billing_cycle_anchor",
                    models.DateTimeField(help_text="When the billing cycle starts"),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(
                        help_text="Start of the current billing period"
                    ),
                ),
                (
                    "current_period_end",
                    models.DateTimeField(help_text="End of the current billing period"),
                ),
                ("trial_start", models.DateTimeField(blank=True, null=True)),
                ("trial_end", models.DateTimeField(blank=True, null=True)),
                ("canceled_at", models.DateTimeField(blank=True, null=True)),
                ("cancel_at_period_end", models.BooleanField(default=False)),
                ("current_users", models.PositiveIntegerField(default=1)),
                ("current_suppliers", models.PositiveIntegerField(default=0)),
                ("current_customers", models.PositiveIntegerField(default=0)),
                ("current_month_orders", models.PositiveIntegerField(default=0)),
                (
                    "plan",
                    models.ForeignKey(
                        help_text="Current subscription plan",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="licensing.subscriptionplan",
                    ),
                ),
                (
                    "tenant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
                "db_table": "subscriptions",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "stripe_invoice_id",
                    models.CharField(
                        blank=True, help_text="Stripe invoice ID", max_length=100
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50)),
                (
                    "amount_due",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("invoice_date", models.DateTimeField()),
                ("due_date", models.DateTimeField()),
                ("paid_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("open", "Open"),
                            ("paid", "Paid"),
                            ("void", "Void"),
                            ("uncollectible", "Uncollectible"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="licensing.subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "db_table": "subscription_invoices",
                "ordering": ["-invoice_date"],
            },
        ),
    ]
