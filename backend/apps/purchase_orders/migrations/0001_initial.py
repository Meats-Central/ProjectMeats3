# Generated by Django 4.2.7 on 2025-09-11 02:30

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("customers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "product_name",
                    models.CharField(
                        help_text="Name/description of the meat product", max_length=200
                    ),
                ),
                (
                    "meat_cut",
                    models.CharField(
                        choices=[
                            ("ribeye", "Ribeye"),
                            ("strip", "Strip Steak"),
                            ("tenderloin", "Tenderloin"),
                            ("sirloin", "Sirloin"),
                            ("chuck", "Chuck"),
                            ("brisket", "Brisket"),
                            ("ground_beef", "Ground Beef"),
                            ("pork_chop", "Pork Chop"),
                            ("pork_tenderloin", "Pork Tenderloin"),
                            ("bacon", "Bacon"),
                            ("ham", "Ham"),
                            ("chicken_breast", "Chicken Breast"),
                            ("chicken_thigh", "Chicken Thigh"),
                            ("whole_chicken", "Whole Chicken"),
                            ("other", "Other"),
                        ],
                        default="other",
                        help_text="Type of meat cut",
                        max_length=20,
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        help_text="Meat grade (e.g., USDA Prime, Choice, Select)",
                        max_length=50,
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Quantity ordered",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.001"))
                        ],
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        default="lb",
                        help_text="Unit of measurement (lb, kg, case, etc.)",
                        max_length=20,
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Price per unit",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0001"))
                        ],
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total price for this line item",
                        max_digits=12,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notes for this specific item"
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Item",
                "verbose_name_plural": "Order Items",
                "db_table": "purchase_order_items",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        help_text="Current status of the entity",
                        max_length=20,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "po_number",
                    models.CharField(
                        help_text="Purchase order number/identifier", max_length=50
                    ),
                ),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending Approval"),
                            ("confirmed", "Confirmed"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                        ],
                        default="draft",
                        help_text="Current status of the purchase order",
                        max_length=20,
                    ),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                (
                    "requested_delivery_date",
                    models.DateField(
                        blank=True, help_text="Requested delivery date", null=True
                    ),
                ),
                (
                    "actual_delivery_date",
                    models.DateField(
                        blank=True, help_text="Actual delivery date", null=True
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Subtotal before taxes and fees",
                        max_digits=12,
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount",
                        max_digits=12,
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Shipping/delivery cost",
                        max_digits=12,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total order amount",
                        max_digits=12,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes for the order"
                    ),
                ),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes (not visible to customer/supplier)",
                    ),
                ),
                (
                    "delivery_address",
                    models.TextField(
                        blank=True,
                        help_text="Delivery address if different from customer address",
                    ),
                ),
                (
                    "special_instructions",
                    models.TextField(
                        blank=True,
                        help_text="Special delivery or handling instructions",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this entity",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer for this purchase order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_orders",
                        to="customers.customer",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        help_text="User who last modified this entity",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User who owns this entity",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order",
                "verbose_name_plural": "Purchase Orders",
                "db_table": "purchase_orders",
                "ordering": ["-order_date"],
            },
        ),
    ]
